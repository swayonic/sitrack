xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8" 
xml.Workbook({
  'xmlns'      => "urn:schemas-microsoft-com:office:spreadsheet", 
  'xmlns:o'    => "urn:schemas-microsoft-com:office:office",
  'xmlns:x'    => "urn:schemas-microsoft-com:office:excel",    
  'xmlns:html' => "http://www.w3.org/TR/REC-html40",
  'xmlns:ss'   => "urn:schemas-microsoft-com:office:spreadsheet" 
  }) do
  xml.Styles do
    xml.Style 'ss:ID' => 'Default', 'ss:Name' => 'Normal' do
      xml.Alignment 'ss:Vertical' => 'Bottom'
      xml.Borders
      xml.Font 'ss:FontName' => 'Verdana'
      xml.Interior
      xml.NumberFormat
      xml.Protection
    end
    xml.Style 'ss:ID' => 's35' do
      xml.Alignment 'ss:Horizontal' => 'Center', 'ss:Vertical' => 'Bottom'
      xml.Borders do
        xml.Border 'ss:Position' => 'Bottom', 'ss:LineStyle'=>"Continuous", 'ss:Weight'=>"1", 'ss:Color'=>"#000000"
        xml.Border 'ss:Position' => 'Left', 'ss:LineStyle'=>"Continuous", 'ss:Weight'=>"1", 'ss:Color'=>"#000000"
        xml.Border 'ss:Position' => 'Right', 'ss:LineStyle'=>"Continuous", 'ss:Weight'=>"1", 'ss:Color'=>"#000000"
        xml.Border 'ss:Position' => 'Top', 'ss:LineStyle'=>"Continuous", 'ss:Weight'=>"1", 'ss:Color'=>"#000000"
      end
      xml.Font 'ss:FontName' => 'Verdana'
      xml.Interior
    end
  end
  xml.Worksheet 'ss:Name' => 'Kit Orders' do
    xml.Table do
      xml.Row do
        @view.sitrack_view_columns.each do |vc|
          column = vc.sitrack_column
          xml.Cell('ss:StyleID'=>'s35') {xml.Data column.name, 'ss:Type' => 'String'}
        end
      end
      # Rows
      @people.each do |person|
        xml.Row do
          @view.sitrack_view_columns.each do |vc|
            column = vc.sitrack_column
            value = person[column.safe_name] || ''
            raise column.safe_name.inspect if value.nil?
            case column.column_type
            when 'date'
              value = formatted_date(value) 
            when 'enum'
              value = @option_hash[column.name][u(value)]
            when 'project'
              value = get_project(value.to_i)
            end
            xml.Cell('ss:StyleID'=>'Default') {xml.Data value, 'ss:Type' => 'String'}
          end
        end
      end
    end
  end
end